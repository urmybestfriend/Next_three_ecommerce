/*
* ===================================================
*    Custom Bootstrapious Utils
* ===================================================
*/

/*
   Text utils 
   ------------------------
*/

.text-uppercase {
  @include uppercase;
}

.text-serif {
  font-family: $font-family-serif !important;
}

.text-shadow {
  text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.1);
}

.text-shadow-primary {
  text-shadow: 2px 2px 2px rgba($primary, 0.1);
}

.text-decoration-underline {
  text-decoration: underline;
}

.text-inherit {
  color: inherit;
}

/*
    Rounded corners - lg, sm 
   ------------------------
*/

.rounded-lg {
  border-radius: $border-radius-lg;
}

.rounded-sm {
  border-radius: $border-radius-sm;
}

.rounded-xl {
  border-radius: 10rem;
}

/*
    Border - 0 for table cells
    ------------------------
*/

.border-0 {
  > th,
  > td {
    border: none !important;
  }
}

/*
     Colours and backgrounds
    ------------------------
*/

.bg-primary-100 {
  background: $primary-100;
}

@each $color, $value in $theme-colors {
  .bg-#{$color}-light {
    background-color: tint-color($value, 85%);
  }

  .badge-#{$color}-light {
    color: $value;
    background-color: tint-color($value, 85%);
  }
}

.table-hover {
  tbody tr.no-stripe {
    --#{$variable-prefix}table-accent-bg: $white;
  }
}

.table-hover {
  tbody tr.no-hover {
    &:hover {
      background-color: transparent !important;
    }
  }
}

/*
     Transparent overlays
    ------------------------
*/

.overlay-content {
  position: relative;
  z-index: 20;
}

@each $breakpoint in map-keys($grid-breakpoints) {
  $next: breakpoint-next($breakpoint, $grid-breakpoints);
  $infix: breakpoint-infix($next, $grid-breakpoints);

  .light-overlay#{$infix},
  .overlay-hover-light#{$infix} {
    @include media-breakpoint-up($next) {
      position: relative;

      &::after {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        content: " ";
        background: #fff;
      }
    }
    &.card {
      &::after {
        border-radius: $card-border-radius;
      }
    }
  }

  .overlay-hover-light#{$infix} {
    @include media-breakpoint-up($next) {
      &::after {
        transition: $transition-fade;
        opacity: 0;
      }
    }
  }

  .light-overlay#{$infix},
  .overlay-hover-light#{$infix}:hover {
    @include media-breakpoint-up($next) {
      &::after {
        opacity: 0.4;
      }
    }
  }

  .light-overlay#{$infix}-0,
  .overlay-hover-light#{$infix}-0:hover {
    @include media-breakpoint-up($next) {
      &::after {
        display: none;
      }
    }
  }

  .dark-overlay#{$infix} {
    position: relative;

    @include media-breakpoint-up($next) {
      &::after {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        content: " ";
        opacity: 0.4;
        background: #000;
      }
      &.card {
        &::after {
          border-radius: $card-border-radius;
        }
      }
    }
  }

  .dark-overlay#{$infix}-0 {
    @include media-breakpoint-up($next) {
      &::after {
        display: none;
      }
    }
  }
}

/*
     Other
    ------------------------
*/

.overflow-visible {
  overflow: visible !important;
}

.shadow-0 {
  box-shadow: none !important;
}

.left-box {
  box-shadow: inset 7px 0 9px -7px rgba(0, 0, 0, 0.7);
}

.hover-scale {
  transition: $transition-base;

  &:hover {
    transform: scale(1.05);
  }
}

.bg-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
}

img.bg-image {
  font-family: "object-fit: cover;";
  object-fit: cover;
}

.bg-cover {
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;

  &.bg-cover-left {
    background-position: left center;
  }

  &.bg-cover-right {
    background-position: right center;
  }
}

.full-screen {
  height: calc(100vh - #{$navbarHeight});
}

.mh-full-screen {
  min-height: 100vh;
}

.mh-full-screen-with-header {
  min-height: calc(100vh - #{$headerHeight} - 2rem);
}
